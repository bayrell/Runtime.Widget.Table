/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Table;

use Runtime.Callback;
use Runtime.Exceptions.RuntimeException;
use Runtime.Widget.ButtonModel;
use Runtime.Widget.RenderListModel;
use Runtime.Widget.RowButtons;
use Runtime.Widget.RowButtonsModel;
use Runtime.Widget.Crud.CrudApiStorage;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.Table.DeleteDialogModel;
use Runtime.Widget.Table.SaveDialogModel;
use Runtime.Widget.Table.TableModel;


class TableDialogModel extends TableModel
{	
	/**
	 * Init table widgets
	 */
	void initWidgets()
	{
		parent();
		
		/* Create form */
		FormModel form_model = this.getWidget("form");
		if (form_model == null)
		{
			form_model = new FormModel{
				"parent_widget": this,
				"widget_name": "form",
			};
		}
		
		/* Get render list widget */
		RenderListModel render_list = this.getWidget("render_list");
		
		/* Create save wiget */
		SaveDialogModel save_dialog = new SaveDialogModel{
			"form": form_model,
			"parent_widget": this,
		};
		render_list.addRender(save_dialog.getWidgetName());
		
		/* Create delete widget */
		DeleteDialogModel delete_dialog = new DeleteDialogModel{
			"form": form_model,
			"parent_widget": this,
		};
		render_list.addRender(delete_dialog.getWidgetName());
	}
	
	
	/**
	 * Init buttons
	 */
	void initButtons()
	{
		/* Add button */
		ButtonModel add_button = this.top_buttons.add(new ButtonModel{
			"content": "Add",
			"widget_name": "add_button",
			"styles": [
				"success",
			],
		});
		add_button.events.add("onClick", new Callback(this.getWidget("save_dialog"), "onClick"));
	}
	
	
	/**
	 * Add edit field row buttons
	 */
	ButtonModel addEditFieldRowButtons(RowButtonsModel row_buttons)
	{
		/* Edit button */
		ButtonModel edit_button = row_buttons.add(new ButtonModel{
			"content": "Edit",
			"widget_name": "edit_button",
			"styles": [
				"default",
				"small",
			],
		});
		
		/* Add edit onClick */
		SaveDialogModel save_dialog = this.getWidget("save_dialog");
		edit_button.events.add("onClick", new Callback(save_dialog, "onClick"));
	}
	
	
	/**
	 * Add delete field row buttons
	 */
	ButtonModel addDeleteFieldRowButtons(RowButtonsModel row_buttons)
	{
		/* Delete button */
		ButtonModel delete_button = row_buttons.add(new ButtonModel{
			"content": "Delete",
			"widget_name": "delete_button",
			"styles": [
				"danger",
				"small",
			],
		});
		
		/* Add delete onClick */
		DeleteDialogModel delete_dialog = this.getWidget("delete_dialog");
		delete_button.events.add("onClick", new Callback(delete_dialog, "onClick"));
	}
}